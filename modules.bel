(form snarf ((e) a s r (p g))
  (let d (table (accum take (while (~id g e)
                                   (take (pop g)))))
    (mev s (cons d r) (p g))))

(set belext "bel")

(def modulefile (name|symbol)
  (append (nom name) "." belext))

(mac import (name . body)
  `(let g globe
     (load (modulefile name))
     (snarf g)))

